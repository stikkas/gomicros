{{template "base" .}}

{{define "content" }}
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-5">Test microservices</h1>
                <hr>
                <button type="button" class="btn btn-outline-secondary" onclick="testBroker()">Test Broker</button>
                <button type="button" class="btn btn-outline-secondary" onclick="testAuth()">Test Auth</button>
                <button type="button" class="btn btn-outline-secondary" onclick="testLog()">Test Log</button>
                <button type="button" class="btn btn-outline-secondary" onclick="testMail()">Test Mail</button> 
                <button type="button" class="btn btn-outline-secondary" onclick="testGRPC()">Test gRPC</button> 
                <div id="output" class="mt-5" style="outline: 1px solid silver; padding: 2em;">
                    <span class="text-muted">Output shows here...</span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h4 class="mt-5">Sent</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="payload"><span class="text-muted">Nothing sent yet...</span></pre>
                </div>
            </div>
            <div class="col">
                <h4 class="mt-5">Received</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="received"><span class="text-muted">Nothing received yet...</span></pre>
                </div>
            </div>
        </div>
    </div>
{{end}}

{{define "js"}}
    <script>
        const output = document.getElementById("output");    
        const sent = document.getElementById("payload");        
        const received = document.getElementById("received");        

        function testBroker() {
            fetch("http://localhost:8080", {method: 'POST'}).then(resp => resp.json())
                .then(data => updateOutput(payload, data))
                .catch(err => updateError(err));
        }

        function testAuth() {
            const payload = {
                action: "auth",
                auth: {
                    email: "admin@example.com",
                    password: "verysecret"
                }
            }
            fetch("http://localhost:8080/handle", createBody(payload)).then(resp => resp.json())
                .then(data => updateOutput(payload, data))
                .catch(err => updateError(err));
        }

        function testLog() {
            const payload = {
                action: "log",
                log: {
                    name: "event",
                    data: "Some kind of data"
                }
            }
            fetch("http://localhost:8080/handle", createBody(payload)).then(resp => resp.json())
                .then(data => updateOutput(payload, data))
                .catch(err => updateError(err));
        }

        function testMail() {
            const payload = {
                action: "mail",
                mail: {
                    from: "me@example.com",
                    to: "you@there.com",
                    subject: "Test email",
                    message: "Hello, world!"
                }
            }

            fetch("http://localhost:8080/handle", createBody(payload)).then(resp => resp.json())
                .then(data => updateOutput(payload, data))
                .catch(err => updateError(err));
        }

        function testGRPC() {
            const payload = {
                action: "log",
                log: {
                    name: "Serge",
                    data: "Some gRPC data"
                }
            };

            fetch("http://localhost:8080/log-grpc", createBody(payload)).then(resp => resp.json())
                .then(data => updateOutput(payload, data))
                .catch(err => updateError(err));
        }

        function updateOutput(payload, data) {
            sent.innerHTML = JSON.stringify(payload, undefined, 4);
            received.innerHTML = JSON.stringify(data, undefined, 4);
            if (data.error) {
                output.innerHTML += `<br><strong>Error</strong>: ${data.message}`;
            } else {
                output.innerHTML += `<br><strong>Response from broker service</strong>: ${data.message}`;
            }
        }

        function updateError(err) {
            output.innerHTML += "<br><br>Error: " + err;
        }

        function createBody(payload) {
            const headers = new Headers();
            headers.append("Content-Type", "application/json");
            return body = {
                method: "POST",
                body: JSON.stringify(payload),
                headers: headers
            }
        }
    </script>
{{end}}
